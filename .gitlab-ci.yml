# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
#image: gcc
image: jlemein/gcc-cmake-gl:gcc-10.2
#image: rikorose/gcc-cmake:gcc-10

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  script:
    - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -B build
    - cmake --build ./build --config Release -j8
  artifacts:
    paths:
      - build
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
# test:
#   stage: test
#   script:
#     - ./runmytests.sh
